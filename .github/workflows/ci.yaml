name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: workspace_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install tools
        run: |
          go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
          go install github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@latest
          go install github.com/golang-migrate/migrate/v4/cmd/migrate@latest
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.8

      - name: Generate code
        run: make gen

      - name: Lint
        run: make lint

      - name: Vet
        run: go vet ./...

      - name: Test
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/workspace_test?sslmode=disable
        run: make test

      - name: Build
        run: make build

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -f infrastructure/Dockerfile -t work-tracker:ci .
